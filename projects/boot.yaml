apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://kubernetes.default.svc
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: "-2"
  creationTimestamp: null
  name: boot
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  description: boot project
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
status: {}

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: boot-helm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
spec:
  goTemplate: true
  generators:
  - git:
      files:
      - path: apps/*/boot-helm.yaml
      repoURL: https://github.com/pchar/nxt-ops.git
      requeueAfterSeconds: 20
      revision: main
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
  syncPolicy: {}
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: '{{ default "0" .syncWave }}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io/foreground
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ .appName }}'
      name: boot-{{ userGivenName }}
      namespace: argocd
    spec:
      project: boot
      destination:
        namespace: '{{ .destNamespace }}'
        server: '{{ .destServer }}'
      sources:
        - repoURL: '{{ .helmChartURL }}'
          targetRevision: '{{ .helmChartVersion }}'
          chart: '{{ .helmChartName }}'
          helm:
            releaseName: '{{ .helmChartName }}'
            valueFiles:
              - $values/apps/{{ .helmChartName }}/values.yaml
        - repoURL: https://github.com/pchar/nxt-ops.git
          targetRevision: main
          ref: values
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Validate=true
          - Wait=true
      ignoreDifferences:
        - group: argoproj.io
          jsonPointers:
            - /status
          kind: Application
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: boot-dir
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
spec:
  goTemplate: true
  generators:
  - git:
      files:
      - path: apps/*/boot-dir.yaml
      repoURL: https://github.com/pchar/nxt-ops.git
      requeueAfterSeconds: 20
      revision: main
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
  syncPolicy: {}
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: '{{ default "0" .syncWave }}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io/foreground
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ .appName }}'
      name: boot-{{ userGivenName }}
      namespace: argocd
    spec:
      project: boot
      destination:
        namespace: '{{ .destNamespace }}'
        server: '{{ .destServer }}'
      source:
        path:  apps/{{ .appName }}/templates/
        repoURL: https://github.com/pchar/nxt-ops.git
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Validate=true
          - Wait=true
      ignoreDifferences:
        - group: argoproj.io
          jsonPointers:
            - /status
          kind: Application
status: {}
